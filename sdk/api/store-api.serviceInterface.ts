/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { OrderDto } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface DeleteOrderRequestParams {
    orderId: string;
}

export interface GetOrderByIdRequestParams {
    orderId: number;
}

export interface PlaceOrderRequestParams {
    orderDto: OrderDto;
}


export interface StoreApiServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Delete purchase order by ID
     * For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
* @param requestParameters
     */
    deleteOrder(requestParameters: DeleteOrderRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Returns pet inventories by status
     * Returns a map of status codes to quantities
*/
    getInventory(extraHttpRequestParams?: any): Observable<{ [key: string]: number; }>;

    /**
     * Find purchase order by ID
     * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generate exceptions
* @param requestParameters
     */
    getOrderById(requestParameters: GetOrderByIdRequestParams, extraHttpRequestParams?: any): Observable<OrderDto>;

    /**
     * Place an order for a pet
     * 
* @param requestParameters
     */
    placeOrder(requestParameters: PlaceOrderRequestParams, extraHttpRequestParams?: any): Observable<OrderDto>;

}
